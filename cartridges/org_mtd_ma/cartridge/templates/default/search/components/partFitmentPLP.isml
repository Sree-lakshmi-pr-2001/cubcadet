<isscript>
    var assets = require('*/cartridge/scripts/assets');
    assets.addCss('/css/_partFitment.css');

    var enableModelFilterOnSearchPage = dw.system.Site.getCurrent().getCustomPreferenceValue('enableModelFilterOnSearchPage');
</isscript>

<isset name="fitsOnModelCategoryEnable" value="${pdict.productSearch.apiProductSearch.category && pdict.productSearch.apiProductSearch.category.custom.fitsOnModelEnable || false}" scope="page"/>

<isif condition="${fitsOnModelCategoryEnable}">
    <isset name="searchCategoryURL" value="${URLUtils.url('Search-Show', 'cgid', pdict.productSearch.category.id)}" scope="page" />
</isif>

<div class="${fitsOnModelCategoryEnable || enableModelFilterOnSearchPage && !pdict.productSearch.apiProductSearch.category && pdict.productSearch.searchKeywords.length > 0 ? "col-12 px-0 sbn" : "d-none"}">
    <div class="part-fitment-wrapper plp p-2 mb-2 d-flex flex-column align-items-center ${pdict.CurrentHttpParameterMap.willNotFit.value ? 'not-fit' : ''} ${pdict.willFitsOnModel ? "will-fit" : ""}">
        <isif condition="${willFitsOnModel}">
            <h6><iscontentasset aid="part-fitment-component-title-fit" /></h6>
        <iselse/>
            <isif condition="${pdict.CurrentHttpParameterMap.willNotFit.value}">
                <h6 class="does-not-fit-title"><iscontentasset aid="part-fitment-component-title-no-fit" /></h6>
            <iselse/>
                <h6><iscontentasset aid="part-fitment-component-title-default" /></h6>
            </isif>
        </isif>
        <p><iscontentasset aid="part-fitment-component-description-fit" /></p>
        <form class="part-fitment-forms need-validation" action="${fitsOnModelCategoryEnable ? searchCategoryURL : URLUtils.url('Search-Show')}" method="get" role="search">
            <div class="input-group text-center">
                <input
                    name="fitsOnModel"
                    type="search"
                    class="part-fitment-input form-control text-center ${pdict.CurrentHttpParameterMap.willNotFit.value && 'is-invalid'}"
                    value="${pdict.willFitsOnModel && pdict.CurrentHttpParameterMap.fitsOnModel.value ? "#" + pdict.CurrentHttpParameterMap.fitsOnModel.value
                                : pdict.CurrentHttpParameterMap.willNotFit.value ?  pdict.CurrentHttpParameterMap.willNotFit.value
                                : ''}"
                    ${willFitsOnModel || pdict.CurrentHttpParameterMap.willNotFit.value ? 'readonly': ''}
                    required
                />
                <isif condition="${!fitsOnModelCategoryEnable}">
                    <input name="q" value="${pdict.productSearch.searchKeywords}" type="hidden" scope="page"/>
                </isif>

                <isif condition="${!willFitsOnModel}">
                    <span class="ml-1">
                        <button class="btn btn-secondary content-search" type="submit">${Resource.msg('fits.on.model.button.submit', 'partFitment', null)}</button>
                    </span>
                </isif>
                <div class="${pdict.CurrentHttpParameterMap.willNotFit.value ? 'invalid-feedback text-danger' : 'd-none'}">
                    ${Resource.msg('fits.on.model.not.verified', 'partFitment', null)}
                </div>
            </div>
        </form>
        <div class="col-12 d-none d-md-flex align-items-center justify-content-center p-0 mt-1">
            <isif condition="${!willFitsOnModel && !pdict.productSearch.apiProductSearch.category.custom.fitsOnModelEnable}">
                <h3 class="attribute-name">${Resource.msg('search.dyno.parts', 'search', null)}</h3>
            </isif>
            <isif condition="${willFitsOnModel}">
                <div class="d-flex w-100">
                    <div class="part-fitment-icon plp mr-1"></div>
                    <div><strong>${Resource.msgf('fits.on.model.verified', 'partFitment', null, pdict.CurrentHttpParameterMap.fitsOnModel.value)}</strong></div>
                </div>
            </isif>
        </div>
        <isif condition="${willFitsOnModel || pdict.CurrentHttpParameterMap.willNotFit.value}">
            <div class="m-1">
                <a  href="${pdict.fitsOnModelResetURL}">
                    ${Resource.msg('fits.on.model.reset.text', 'partFitment', null)}
                </a>
            </div>
        <iselse/>
            <div class="m-1">
                <a class="find-model" data-target="#modal-will-fit" data-toggle="modal" href="" title="${Resource.msg('fits.on.model.find.number.title', 'partFitment', null)}">${Resource.msg('fits.on.model.find.number.question', 'partFitment', null)}</a>
            </div>
        </isif>
    </div>
</div>
